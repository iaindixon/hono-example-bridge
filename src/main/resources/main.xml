<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
         http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

    <camelContext id="ExampleTelemetryBridge"
        xmlns="http://camel.apache.org/schema/spring">

        <dataFormats>
            <json id="telemetryMap" library="Jackson" unmarshalTypeName="java.util.Map" />
        </dataFormats>

        <route id="store">
            <from uri="amqp:telemetry/DEFAULT_TENANT" />

            <setHeader id="setKafkaKey" headerName="kafka.KEY">
                <simple>${header[device_id]}</simple>
            </setHeader>

            <to uri="kafka:telemetry?brokers=hono-kafka-cluster-kafka.strimzi.svc:9092" />
        </route>

    </camelContext>

    <camelContext id="ExampleEventBridge"
                  xmlns="http://camel.apache.org/schema/spring">

        <dataFormats>
            <json id="eventMap" library="Jackson" unmarshalTypeName="java.util.Map" />
        </dataFormats>

        <route id="store">
            <from uri="amqp:event/DEFAULT_TENANT" />

            <setHeader id="setKafkaKey" headerName="kafka.KEY">
                <simple>${header[device_id]}</simple>
            </setHeader>

            <to uri="kafka:event?brokers=hono-kafka-cluster-kafka.strimzi.svc:9092" />
        </route>

    </camelContext>

</beans>
